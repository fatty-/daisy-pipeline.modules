
[xml:id = 'datatypes-common']
div {
   datatype.languagecode = datatype.BCP47
   datatype.BCP47 = xsd:language      
   datatype.ID = datatype.ID.lexical 
   datatype.ID.lexical = xsd:NCName
   datatype.ID.xsd = xsd:ID  
   datatype.IDREF = datatype.IDREF.lexical                   
   datatype.IDREF.lexical = xsd:NCName
   datatype.IDREF.xsd = xsd:IDREF                      
   datatype.IDREFS = datatype.IDREFS.lexical
   datatype.IDREFS.lexical = string #TODO  
   datatype.IDREFS.xsd = xsd:IDREFS
   datatype.NMTOKEN = xsd:NMTOKEN
   datatype.NMTOKENS = xsd:NMTOKENS
   datatype.text = text
   datatype.string = xsd:string
   datatype.LEIRI = xsd:anyURI   
   datatype.URI = xsd:anyURI
   datatype.URI.absolute = xsd:anyURI #TODO
   #cowan datatype.URI = xsd:anyURI - xsd:string { pattern = '.*[ <>{}|^`"\\\n\r\t].*' }
   datatype.character.encoding = datatype.iana.charset
   datatype.iana.charset = text
   datatype.mimetype = text    
   datatype.mimetype.nocharset = text  
   datatype.non-negative.integer = xsd:nonNegativeInteger  
   datatype.positive.integer = xsd:positiveInteger  
   datatype.integer = xsd:integer
   datatype.float = xsd:float { pattern = "-?[0-9]+(\.[0-9]+)?([eE]-?[0-9]+)?" }    
   datatype.float.positive = xsd:float { pattern = "(0*[1-9][0-9]*(\.[0-9]+)?)|([0-9]+(\.0*[1-9][0-9]*)?)([eE]-?[0-9]+)?" }
   datatype.float.non-negative = xsd:float { pattern = "[0-9]+(\.[0-9]+)?([eE]-?[0-9]+)?" }
   datatype.bool = xsd:boolean   
}

[xml:id = 'datatypes-smil']
div {
   datatype.smil.npt = ( 
        xsd:string { pattern="(\s*)[0-9]+:[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(\s*)" } #Full-clock-val
      | xsd:string { pattern="(\s*)[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(\s*)" } #Partial-clock-val
      | xsd:string { pattern="(\s*)[0-9]+(\.[0-9]+)?(h|min|s|ms)?(\s*)" } ) #Timecount-val      
}

[xml:id = 'datatypes-rdfa']
div {
   datatype.rdfa.CURIE = xsd:string { pattern="(([\i-[:]][\c-[:]]*)?:)?.+" minLength="1" }         
   datatype.rdfa.CURIEs = list { datatype.rdfa.CURIE }
   datatype.rdfa.prefix = text 
}

[xml:id = 'datatypes-ssml']
div {
   datatype.ssml.PhoneticExpression = xsd:string         
}

[xml:id = 'datatypes-html5']
div {
   datatype.html5.browsing.context.name.or.keyword = text
   datatype.html5.browsing.context.name = text  
   datatype.html5.space.separated.tokens = xsd:NMTOKENS          
   datatype.html5.URL.spaces = xsd:anyURI                    
   datatype.html5.media.query = text        
   datatype.html5.name.reference = text      
   datatype.html5.datetime = text                               #TODO Valid date or time string (<time>)
   datatype.html5.date.optional.time = text                     #TODO Valid date string with optional time (<ins>+<del>)
   
   datatype.html5.name = text
   datatype.html5.ordered.set.unique.tokens = text
  
   datatype.html5.coords.rectangle = xsd:token { pattern = "-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+" }
   datatype.html5.coords.circle = xsd:token { pattern = "-?[0-9]+,-?[0-9]+,[0-9]+" }
   datatype.html5.coords.poly = xsd:token { pattern = "-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+(,-?[0-9]+,-?[0-9]+)*"}
   
   datatype.html5.script = text #TODO
   datatype.html5.script.documentation = text #TODO
			
}

[xml:id = 'datatypes-html5forms']
div {
   datatype.html5.forms.mimetypelist = text #TODO
   datatype.html5.forms.charsetlist = text #TODO
   datatype.html5.forms.pattern = text #TODO
   datatype.html5.forms.datetime.local = text #TODO
   datatype.html5.forms.date = text #TODO
   datatype.html5.forms.month = text #TODO
   datatype.html5.forms.time = text #TODO
   datatype.html5.forms.week = text #TODO
   datatype.html5.forms.color = text #TODO
   datatype.html5.forms.emailaddress = text #TODO
   datatype.html5.forms.emailaddresslist = text #TODO
}


#		xsd:string { browsing.context.name.or.keyword
#			pattern = "()|([^_].*)|(_[bB][lL][aA][nN][kK])|(_[sS][eE][lL][fF])|(_[pP][aA][rR][eE][nN][tT])|(_[tT][oO][pP])"
#		}

# TODO BCP47 datatype
# TODO LEIRI datatype (for xml:base)
# TODO iana.charset datatype 
# TODO mimetype datatype (http://www.w3.org/TR/html5/infrastructure.html#valid-mime-type)
# TODO browsing.context.name.or.keyword dataype (http://www.w3.org/TR/html5/browsers.html#valid-browsing-context-name-or-keyword)
# TODO space.separated.tokens = xsd:NMTOKENS : think too restrictive compared to http://www.w3.org/TR/html5/common-microsyntaxes.html#set-of-space-separated-tokens
# TODO URL.spaces datatype (http://www.w3.org/TR/html5/urls.html#valid-url-potentially-surrounded-by-spaces)
# TODO media query datatype
# TODO name.reference datatype
# TODO datatype.html5.name datatype
# TODO datatype.mimetype.nocharset (no charset param)
# TODO datatype.html5.ordered.set.unique.tokens datataype