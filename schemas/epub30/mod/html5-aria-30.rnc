


   html5.global.attrs &= aria.global.attrs

   aria.global.attrs = aria.role.attr? & aria.prop.atomic? & aria.state.busy? & aria.prop.controls?
	 & aria.prop.describedby? & aria.state.disabled? & aria.state.dropeffect?
	 & aria.prop.flowto? & aria.state.grabbed? & aria.prop.haspopup? & aria.state.hidden?
	 & aria.state.invalid? & aria.prop.label? & aria.prop.labelledby? & aria.prop.live?
	 & aria.prop.owns? & aria.prop.relevant? & aria.prop.required?


   aria.role.attr = attribute role { datatype.NMTOKENS }


   aria.state.busy = attribute aria-busy { 'true' | 'false' }
   aria.state.checked = attribute aria-checked { 'true' | 'false' | 'mixed' | 'undefined' }
   aria.state.disabled = attribute aria-disabled { 'true' | 'false' }
   aria.state.dropeffect = attribute aria-dropeffect
      { token 'none' | token "popup" | token "execute" 
         | list {('copy'), ('execute')? } | list { ('move'), ('execute')?}
         | list { ('reference'), ('execute')? } | list { ('execute') , ('copy') }
         | list { ('execute') , ('move')} | list { ('execute' ), ('reference') }
      }
   aria.state.expanded = attribute aria-expanded { 'true' | 'false' | 'undefined' }
   aria.state.grabbed = attribute aria-grabbed { 'true' | 'false' | 'undefined' }
   aria.state.hidden = attribute aria-hidden { 'true' | 'false' }
   aria.state.invalid = attribute aria-invalid { 'true' | 'false' | 'grammar' | 'spelling' }
   aria.state.pressed = attribute aria-pressed  { 'true' | 'false' | 'mixed' | "undefined" }
   aria.state.selected = attribute aria-selected { 'true' | 'false' | 'undefined' }


   aria.prop.activedescendant = attribute aria-activedescendant { datatype.IDREF } #TODO SCH
   aria.prop.atomic = attribute aria-atomic { 'true' | 'false' }	
   aria.prop.autocomplete = attribute aria-autocomplete { 'inline' | 'list' | 'both' | 'none' }
   aria.prop.controls = attribute aria-controls { datatype.IDREFS } #TODO SCH
   aria.prop.describedby = attribute aria-describedby { datatype.IDREFS } 
   aria.prop.flowto = attribute aria-flowto { datatype.IDREFS } #TODO SCH
   aria.prop.haspopup = attribute aria-haspopup { 'true' | 'false' } #TODO check owns or descendant	
   aria.prop.label = attribute aria-label { datatype.string }
   aria.prop.labelledby = attribute aria-labelledby { datatype.IDREFS } 
   aria.prop.level = attribute aria-level { datatype.positive.integer }
   aria.prop.live = attribute aria-live { 'off' | 'polite' | 'assertive' }	
   aria.prop.multiline = attribute aria-multiline { 'true' | 'false' }	
   aria.prop.multiselectable = attribute aria-multiselectable { 'true' | 'false' }	
   aria.prop.owns = attribute aria-owns { datatype.IDREFS } #TODO SCH
   aria.prop.posinset = attribute aria-posinset { datatype.positive.integer }
   aria.prop.readonly = attribute aria-readonly { 'true' | 'false' }	
   aria.prop.relevant = attribute aria-relevant 
      { token "all" 
         | list { ( 'additions' ), ( 'removals' )? , ( 'text' )? }
         | list { ( 'additions' ), ( 'text' )?, ( 'removals' )? }
         | list { ( 'removals' ), ( 'additions' )?, ( 'text' )? }
         | list { ( 'removals' ), ( 'text' )?, ( 'additions' )? }
         | list { ( 'text' ), ( 'additions' )?, ( 'removals' )? }
         | list { ( 'text' ), ( 'removals' )? , ( 'additions' )? }
      }	
   aria.prop.required = attribute aria-required { 'true' | 'false' }	
   aria.prop.setsize = attribute aria-setsize { datatype.non-negative.integer }
   aria.prop.sort = attribute aria-sort { 'ascending '| 'descending' | 'none'  | 'other' }	
   aria.prop.valuemax = attribute aria-valuemax { datatype.float }
   aria.prop.valuemin = attribute aria-valuemin { datatype.float }
   aria.prop.valuenow = attribute aria-valuenow { datatype.float }
   aria.prop.valuetext = attribute aria-valuetext { datatype.string }

